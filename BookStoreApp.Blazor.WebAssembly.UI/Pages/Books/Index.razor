@page "/books/"
@inject IBookService bookService
@inject IJSRuntime js

<h3>Books</h3>
<hr />

@if (response.Success == false)
{
    <div class="alert alert-info">
        <h4>
            Something went wrong trying to get data.
        </h4>
    </div>

    <hr />
}

@if (Model == null)
{
    <div class="alert alert-info">
        <h4>
            Please wait, loading..
        </h4>
    </div>
}
else
{

    <AuthorizeView Roles="Administrator">
        <a class="btn btn-outline-success" href="/books/create"><span class="oi oi-plus" aria-hidden="true"></span> Create</a>
        <br />
        <br />
    </AuthorizeView>

    <div class="row col-12">
        @foreach (var book in Model)
        {
            <div class="card book-card col-3">
                <img src="@book.Image" class="card-img-top" alt="@book.Title">
                <div class="card-body">
                    <h7 class="card-title">
                        <a href="/authors/details/@book.AuthorId">
                            @book.AuthorName - @book.Title
                        </a>
                    </h7>
                    <hr />
                    <h7 class="card-title"><b>Year - @book.Year &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  R @book.Price</b></h7>
                    <br />
                    <h7 class="card-title"></h7>
                    <hr />
                    <AuthorizeView Roles="Administrator">
                        <div class="row col-12 action-row">
                            <a class="btn btn-outline-info btn-action" href="/books/details/@book.Id" data-bs-toggle="tooltip" data-bs-html="true" title="Click to view book"><span class="oi oi-book" aria-hidden="true"></span> </a>
                            <a class="btn btn-outline-warning btn-action" href="/books/update/@book.Id" data-bs-toggle="tooltip" data-bs-html="true" title="Click to update book"><span class="oi oi-pencil" aria-hidden="true"></span></a>
                            <a class="btn btn-outline-danger btn-action" @onclick=@(() => DeleteBook(book.Id)) data-bs-toggle="tooltip" data-bs-html="true" title="Click to remove book"><span class="oi oi-trash" aria-hidden="true"></span></a>
                        </div>
                    </AuthorizeView>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<BookReadOnlyDto>? Model;
    private Response<List<BookReadOnlyDto>> response = new Response<List<BookReadOnlyDto>> { Success = true };

    protected override async Task OnInitializedAsync()
    {
        response = await bookService.GetActiveBookListAsync();

        if (response.Success)
        {
            Model = response.Data ?? new List<BookReadOnlyDto>();
        }
        else
        {
            Model = new List<BookReadOnlyDto>();
        }
    }

    private async Task DeleteBook(int bookId)
    {
        if (Model != null)
        {
            var book = Model.First(q => q.Id == bookId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Are you sure you want to delete {book.Title} ?");

            if (confirm)
            {
                var response = await bookService.DeleteBook(bookId);

                if (response.Success)
                {
                    await OnInitializedAsync();
                }
            }
        }
    }
}
